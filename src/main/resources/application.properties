# suppress inspection "UnusedProperty" for whole file
#
quarkus.resteasy.path=/api
quarkus.http.port=${PORT:8080}
mp.openapi.extensions.smallrye.operationIdStrategy=METHOD
%dev.quarkus.log.category."org.apache.http".level=DEBUG
quarkus.http.proxy.proxy-address-forwarding=true
quarkus.http.proxy.enable-forwarded-host=true
quarkus.http.proxy.enable-forwarded-prefix=true
quarkus.http.cors.exposed-headers=Location
#
#
# Database config
#
%dev.quarkus.datasource.devservices.port=5432
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=pg
%dev.quarkus.datasource.password=pg
%dev.quarkus.hibernate-orm.log.sql=false
%dev.quarkus.hibernate-orm.database.generation=none
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres
# For creating update scripts
# %dev.quarkus.hibernate-orm.scripts.generation=update
# %dev.quarkus.hibernate-orm.scripts.generation.create-target=create.sql
# %dev.quarkus.hibernate-orm.scripts.generation.drop-target=drop.sql
#
# activate flyway for db updates
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
# Let's make sure we don't wipe the production data by accident!
%prod.quarkus.hibernate-orm.database.generation=none
%prod.quarkus.hibernate-orm.sql-load-script=no-file
#
#
# Google Storage
#
%dev.quarkus.google.cloud.project-id=${GCPID:nemesis-329908}
nemesis.google.storage.bucketName=${GCSBUCKET:nemesis-dev-objects}
%dev.quarkus.google.cloud.service-account-location=${GOOGLE_APPLICATION_CREDENTIALS}
#
#
# OIDC config
# auth0 is used for the application, the auth0 secret must be supplied through an environment variable
# For unit testing purposes, auth0 is disabled
#
%prod.quarkus.oidc.auth-server-url=${AUTH0SERVER:https://nemesis-app.eu.auth0.com}
%prod.quarkus.oidc.client-id=${AUTH0CLIENTID:Kg76SasHOjZ5QAibbOCnLsk9v063M26u}
%prod.quarkus.oidc.credentials.secret=${AUTH0SECRET}
%prod.quarkus.oidc.application-type=web_app
# This path is the allowed callback path configured in auth0
%prod.quarkus.oidc.authentication.redirect-path=/api/callback
# and that property restores the actual path after the callback
%prod.quarkus.oidc.authentication.restore-path-after-redirect=true
%prod.quarkus.oidc.logout.path=/logout
%prod.quarkus.oidc.logout.post-logout-path=/
# Auth0 does not return the `end_session_endpoint` metadata property, configire it instead
%prod.quarkus.oidc.end-session-path=v2/logout
# Auth0 will not recognize the 'post_logout_redirect_uri' query parameter so make sure it is named as 'returnTo'
%prod.quarkus.oidc.logout.post-logout-uri-param=returnTo
%prod.quarkus.http.auth.permission.authenticated.paths=/*
%prod.quarkus.http.auth.permission.authenticated.policy=authenticated
%prod.quarkus.oidc.authentication.scopes=openid,profile,email
# Disabled oidc for unit tests and dev environment
%test.quarkus.oidc.enabled=false
%dev.quarkus.oidc.enabled=false
%dev.quarkus.keycloak.devservices.enabled=false
%dev.quarkus.http.cors=true
%dev.quarkus.http.cors.origins=http://localhost:5000
%dev.quarkus.http.cors.methods=GET,POST,PUT,DELETE
#
#
# SendGrid config
#
# Your email address you send from - must match the "from" address from sendgrid.
quarkus.mailer.from=support@quellkunst.com
# The SMTP host
quarkus.mailer.host=smtp.sendgrid.net
# The SMTP port
quarkus.mailer.port=465
# If the SMTP connection requires SSL/TLS
quarkus.mailer.ssl=true
# Your username
quarkus.mailer.username=${SMTPUSER:apikey}
# Your password
quarkus.mailer.password=${SMTPSECRET}
# By default, in dev mode, the mailer is a mock. This disables the mock and use the configured mailer.
quarkus.mailer.mock=false